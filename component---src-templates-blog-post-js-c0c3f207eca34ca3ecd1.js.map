{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/core-js/modules/_string-repeat.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_5__","className","classes","root","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","date","repeat","timeToRead","dangerouslySetInnerHTML","__html","html","markdown","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","withStyles","marginTop","paddingTop","& p","textIndent","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","useStyles","makeStyles","theme","flexGrow","backgroundColor","teal","color","grey","paddingBottom","navBar","flexDirection","alignItems","navLink","fontSize","textDecoration","&:hover","light","borderRadius","Header","toggleDarkMode","react_default","AppBar","Toolbar","Typography","variant","gatsby_browser_entry","Button","onClick","footer","width","paper","height","margin","Layout","children","_useState","useState","palette","type","setTheme","muiTheme","createMuiTheme","_856328897","ThemeProvider","Paper","header","newPaletteType","Container","maxWidth","Date","getFullYear","href","$export","P","toInteger","defined","count","str","String","res","Infinity","RangeError"],"mappings":"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","file":"component---src-templates-blog-post-js-c0c3f207eca34ca3ecd1.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { withStyles } from \"@material-ui/styles\"\r\n\r\n\r\nconst styles = {\r\n  root : {\r\n    marginTop: \"80px\",\r\n    paddingTop: \"18px\"\r\n  },\r\n\r\n  markdown : {\r\n    '& p' : {\r\n      \r\n      textIndent: \"24px\",\r\n    }\r\n  }\r\n}\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <Container className={this.props.classes.root}>\r\n          <SEO\r\n            title={post.frontmatter.title}\r\n            description={post.frontmatter.description || post.excerpt}\r\n            \r\n          />\r\n          <h1>{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n          <p>\r\n            Appetite required : {\"üç∞\".repeat(post.timeToRead)} -{\" \"}\r\n            {post.timeToRead} minutes\r\n          </p>\r\n          <div dangerouslySetInnerHTML={{ __html: post.html }} className={this.props.classes.markdown}/>\r\n          <hr />\r\n\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ‚Üê {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} ‚Üí\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BlogPostTemplate)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      timeToRead\r\n      frontmatter {\r\n        title\r\n        date\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n// (formatString: \"MMMM DD, YYYY\")\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport teal from '@material-ui/core/colors/teal'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: teal[200],\r\n    color: grey[900],\r\n    paddingBottom: \"1rem\"\r\n  },\r\n  navBar: {\r\n    display: 'flex',\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n  navLink : {\r\n    fontSize: \"2rem\",\r\n    textDecoration: 'none',\r\n    color: grey[900],\r\n\r\n    '&:hover': {\r\n      color: grey[200],\r\n    },\r\n\r\n  },\r\n  light : {\r\n    fontSize: \"2rem\",\r\n    borderRadius: \"50%\",\r\n\r\n  }\r\n \r\n}))\r\n\r\nconst Header = ({ siteTitle, toggleDarkMode }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <AppBar className={classes.root}>\r\n\r\n        <Toolbar className={classes.navBar}>\r\n            <Typography variant=\"h2\">\r\n              <Link to=\"/\" className={classes.navLink}>\r\n                {siteTitle}\r\n              </Link>\r\n            </Typography>\r\n          <Button onClick={toggleDarkMode} className={classes.light}>üî¶</Button>\r\n          \r\n        </Toolbar>\r\n  \r\n    </AppBar>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { ThemeProvider } from \"@material-ui/styles\"\r\nimport { createMuiTheme } from \"@material-ui/core/styles\"\r\n\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      \r\n    },\r\n    footer: {\r\n      marginTop: \"3rem\",\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      margin: \"O\",\r\n      borderRadius: \"0\",\r\n      \r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  // We keep the theme in app state\r\n  const [theme, setTheme] = useState({\r\n    palette: {\r\n      type: \"light\",\r\n    },\r\n  })\r\n\r\n  // we change the palette type of the theme in state\r\n  const toggleDarkMode = () => {\r\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\"\r\n    setTheme({\r\n      palette: {\r\n        type: newPaletteType,\r\n      },\r\n    })\r\n  }\r\n\r\n  // we generate a MUI-theme from state's theme object\r\n  const muiTheme = createMuiTheme(theme)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Paper className={classes.paper}>\r\n        <Header\r\n          siteTitle={data.site.siteMetadata.title}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n\r\n        <Container maxWidth=\"sm\" className={classes.root}>\r\n          {children}\r\n\r\n          <footer className={classes.footer}>\r\n            ¬© {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </Container>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n"],"sourceRoot":""}