{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","teal","color","grey","paddingBottom","navBar","display","flexDirection","flexWrap","alignItems","justifyContent","navLink","fontSize","textDecoration","&:hover","light","borderRadius","Header","siteTitle","toggleDarkMode","classes","react_default","AppBar","className","Toolbar","Typography","variant","gatsby_browser_entry","to","Button","onClick","footer","marginTop","width","paper","height","margin","Layout","children","_useState","useState","palette","type","setTheme","muiTheme","createMuiTheme","_856328897","ThemeProvider","Paper","header","newPaletteType","Container","maxWidth","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-404-js-2b6c43f627c25c694344.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>not found ðŸ˜¥</h1>\r\n    <p>Maybe it does not exits ... ðŸ¤”</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport teal from '@material-ui/core/colors/teal'\r\nimport grey from '@material-ui/core/colors/grey'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: teal[200],\r\n    color: grey[900],\r\n    paddingBottom: \"1rem\"\r\n  },\r\n  navBar: {\r\n    display: 'flex',\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n  navLink : {\r\n    fontSize: \"2rem\",\r\n    textDecoration: 'none',\r\n    color: grey[900],\r\n\r\n    '&:hover': {\r\n      color: grey[200],\r\n    },\r\n\r\n  },\r\n  light : {\r\n    fontSize: \"2rem\",\r\n    borderRadius: \"50%\",\r\n\r\n  }\r\n \r\n}))\r\n\r\nconst Header = ({ siteTitle, toggleDarkMode }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <AppBar className={classes.root}>\r\n\r\n        <Toolbar className={classes.navBar}>\r\n            <Typography variant=\"h2\">\r\n              <Link to=\"/\" className={classes.navLink}>\r\n                {siteTitle}\r\n              </Link>\r\n            </Typography>\r\n          <Button onClick={toggleDarkMode} className={classes.light}>ðŸ”¦</Button>\r\n          \r\n        </Toolbar>\r\n  \r\n    </AppBar>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nimport Container from \"@material-ui/core/Container\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport { ThemeProvider } from \"@material-ui/styles\"\r\nimport { createMuiTheme } from \"@material-ui/core/styles\"\r\n\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      \r\n    },\r\n    footer: {\r\n      marginTop: \"3rem\",\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      margin: \"O\",\r\n      borderRadius: \"0\",\r\n      \r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  // We keep the theme in app state\r\n  const [theme, setTheme] = useState({\r\n    palette: {\r\n      type: \"light\",\r\n    },\r\n  })\r\n\r\n  // we change the palette type of the theme in state\r\n  const toggleDarkMode = () => {\r\n    let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\"\r\n    setTheme({\r\n      palette: {\r\n        type: newPaletteType,\r\n      },\r\n    })\r\n  }\r\n\r\n  // we generate a MUI-theme from state's theme object\r\n  const muiTheme = createMuiTheme(theme)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Paper className={classes.paper}>\r\n        <Header\r\n          siteTitle={data.site.siteMetadata.title}\r\n          toggleDarkMode={toggleDarkMode}\r\n        />\r\n\r\n        <Container maxWidth=\"sm\" className={classes.root}>\r\n          {children}\r\n\r\n          <footer className={classes.footer}>\r\n            Â© {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </Container>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}